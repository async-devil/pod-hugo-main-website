variables:
  GIT_SUBMODULE_STRATEGY: recursive
  TAG_LATEST_DEV: registry.pod.cvut.cz/internal/pod-o-lee/main-web-dev:latest
  TAG_COMMIT_DEV: registry.pod.cvut.cz/internal/pod-o-lee/main-web-dev:$CI_COMMIT_SHORT_SHA
  TAG_LATEST_PROD: registry.pod.cvut.cz/internal/pod-o-lee/main-web-prod:latest
  TAG_COMMIT_PROD: registry.pod.cvut.cz/internal/pod-o-lee/main-web-prod:$CI_COMMIT_SHORT_SHA

stages:
  - build
  - deploy

build_dev:
  stage: build
  image: registry.pod.cvut.cz/cache/library/docker:23.0
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.pod.cvut.cz
    - docker pull ${TAG_LATEST_DEV} || true
    - docker build
      --push
      --target hugo_prod
      --tag ${TAG_COMMIT_DEV}
      --tag ${TAG_LATEST_DEV}
      --build-arg hugo_env=develop
      --cache-to type=inline
      --cache-from type=registry,ref=${TAG_LATEST_DEV} .
  environment:
    name: development
    url: https://new.podolee.cz
    deployment_tier: staging
    action: prepare
  only:
    - develop

build_prod:
  stage: build
  image: registry.pod.cvut.cz/cache/library/docker:23.0
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.pod.cvut.cz
    - docker pull ${TAG_LATEST_PROD} || true
    - docker build
      --push
      --target hugo_prod
      --tag ${TAG_COMMIT_PROD}
      --tag ${TAG_LATEST_PROD}
      --build-arg hugo_env=production
      --cache-to type=inline
      --cache-from type=registry,ref=${TAG_LATEST_PROD} .
  environment:
    name: production
    url: https://podolee.cz
    deployment_tier: production
    action: prepare
  only:
    - main

deploy_dev:
  stage: deploy
  image: registry.pod.cvut.cz/cache/library/alpine:latest
  script:
    - chmod og= $DOCKER_DEPLOYER_PRIVATE_KEY
    - apk update && apk add openssh-client
    - ssh -i $DOCKER_DEPLOYER_PRIVATE_KEY -o StrictHostKeyChecking=no -p $DOCKER_SERVER_HOST_SSH_PORT $DOCKER_DEPLOYER_USER@$DOCKER_SERVER_HOST "docker service rm main-web-dev || true"
    - ssh -i $DOCKER_DEPLOYER_PRIVATE_KEY -o StrictHostKeyChecking=no -p $DOCKER_SERVER_HOST_SSH_PORT $DOCKER_DEPLOYER_USER@$DOCKER_SERVER_HOST "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.pod.cvut.cz"
    - ssh -i $DOCKER_DEPLOYER_PRIVATE_KEY -o StrictHostKeyChecking=no -p $DOCKER_SERVER_HOST_SSH_PORT $DOCKER_DEPLOYER_USER@$DOCKER_SERVER_HOST "docker service create --with-registry-auth --name main-web-dev --publish published=8005,target=80 --constraint node.labels.staging==true --restart-condition on-failure $TAG_COMMIT_DEV"
  environment:
    name: development
    url: https://new.podolee.cz
    deployment_tier: staging
    action: start
  only:
    - develop
  when: on_success

deploy_prod:
  stage: deploy
  image: registry.pod.cvut.cz/cache/library/alpine:latest
  script:
    - chmod og= $DOCKER_DEPLOYER_PRIVATE_KEY
    - apk update && apk add openssh-client
    - ssh -i $DOCKER_DEPLOYER_PRIVATE_KEY -o StrictHostKeyChecking=no -p $DOCKER_SERVER_HOST_SSH_PORT $DOCKER_DEPLOYER_USER@$DOCKER_SERVER_HOST "docker service rm main-web-prod || true"
    - ssh -i $DOCKER_DEPLOYER_PRIVATE_KEY -o StrictHostKeyChecking=no -p $DOCKER_SERVER_HOST_SSH_PORT $DOCKER_DEPLOYER_USER@$DOCKER_SERVER_HOST "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.pod.cvut.cz"
    - ssh -i $DOCKER_DEPLOYER_PRIVATE_KEY -o StrictHostKeyChecking=no -p $DOCKER_SERVER_HOST_SSH_PORT $DOCKER_DEPLOYER_USER@$DOCKER_SERVER_HOST "docker service create --with-registry-auth --name main-web-prod --publish published=8004,target=80 --constraint node.labels.production==true --restart-condition on-failure $TAG_COMMIT_PROD"
  environment:
    name: production
    url: https://podolee.cz
    deployment_tier: production
    action: start
  only:
    - main
  when: on_success
